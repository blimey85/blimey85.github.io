<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blogging | Ramblings on Rails]]></title>
  <link href="http://traffan.com/categories/blogging/atom.xml" rel="self"/>
  <link href="http://traffan.com/"/>
  <updated>2015-05-01T22:46:27-04:00</updated>
  <id>http://traffan.com/</id>
  <author>
    <name><![CDATA[Gary Traffanstedt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Return of the Great White Hope.]]></title>
    <link href="http://traffan.com/the-return-of-the-great-white-hope/"/>
    <updated>2015-04-15T14:25:27-04:00</updated>
    <id>http://traffan.com/the-return-of-the-great-white-hope</id>
    <content type="html"><![CDATA[<p>After two years of taking a step back and trying other things, I&rsquo;ve returned to the land of the living and have dived head first back into all things technical. Too many years of mediocrity had taken their toll on the passion for programming I once had. First computer when I was three, second when I was eight, first website in &lsquo;96 when I was 18, and first programing job a couple years later. The journey from novice to professional was a quick one. I went from basic html to installing scripts, then to modifying scripts, then to writing custom code. From there it wasn&rsquo;t long until I was programming large sites and doing everything else involved in maintaining large high-traffic sites. I learned on the job and learned just enough as I needed it. Never getting to use the latest and greatest but always stuck with old PHP and Perl code. I knew PHP pretty well, Javascript less well, a bit of Linux, some FreeBSD, quite a bit of MySQL, and on and on. I knew enough and it got me by.</p>

<p>Later I would leave the self-employed world for a jaunt on the corporate side of things, where what little passion I had left would die. Working on 10 year old code that had been touched by at least as many people. Cajoling it into doing things it was never designed to do. Never able to take the time for a decent rewrite because hey, it works well enough. Well, no, it doesn&rsquo;t. It has more bugs than a crack den in the ghetto but that&rsquo;s ok. I&rsquo;ll add in some new code and try my best to patch it together. Who care&rsquo;s about quality, right?</p>

<p>But that was then, this is now, and a two year respite has allowed me to reset mentally. Thanks to sites like <a href="http://www.freecodecamp.com/learn-to-code">Free Code Camp</a>, <a href="http://www.codecademy.com/learn">Codecademy</a>, and <a href="http://www.theodinproject.com/">The Odin Project</a> I&rsquo;m all-in and learning very quickly. My overall plan includes the MEAN stack, Ruby, Rails, and then later Objective-C and Swift. Right now I&rsquo;m working through an Angular tutorial as well as the Learn You Node stuff. I like to work through two at the same time so I can switch back and forth to keep my mind fresh. I also take a quick walk if I get stuck to do a quick reset on my thinking and not just keep beating my head against a wall.</p>

<p>That said, I&rsquo;ll end this here and see if I can get it posted. It&rsquo;s been two years since I&rsquo;ve attempted a blog post and I&rsquo;m having to relearn how to use Octopress. I have the source code to the page but not the source of my previous posts or how I had it set up. Yea, I&rsquo;m regretting deleting all of my programming stuff way back when. Would be nice to have it now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto-Tweet Octopress Blog Posts Using IFTTT]]></title>
    <link href="http://traffan.com/auto-tweet-octopress-blog-posts-using-ifttt/"/>
    <updated>2013-04-21T09:06:42-04:00</updated>
    <id>http://traffan.com/auto-tweet-octopress-blog-posts-using-ifttt</id>
    <content type="html"><![CDATA[<p>When using a blogging platform such as Wordpress, you can typically find a plugin that will do pretty much anything. With Octopress you’re a bit more on your own. Thankfully there are services that assist with much of this. Today I setup an account on <a href="https://ifttt.com/">IFTTT</a> which stands for If This, Then That. Once you have an account on here, setting up automatic tweets is trivial.</p>

<p><strong>Easy Steps:</strong></p>

<ol>
<li>Create a free account on <a href="https://ifttt.com/">IFTTT</a></li>
<li>You’ll want to check your email and verify your email address by clicking the link in that email. I didn’t do this step initially and it took me a bit to figure out why my recipe wasn’t running.</li>
<li>Click on Create a <code>recipe</code></li>
<li>Click on <code>this</code> (only option on this page)</li>
<li>We’re going to be using our <code>atom.xml</code> file so click <code>Feed</code></li>
<li>Now click on <code>New feed item</code> so we get 1 tweet for each new blog post</li>
<li><code>Feed URL</code> is the path to our <code>atom.xml</code> such as: <code>http://traffan.com/atom.xml</code></li>
<li>Now click on <code>that</code> (only option on this page)</li>
<li>Select <code>Twitter</code> since we are setting up a tweet.</li>
<li>Here you’ll be asked to activate your Twitter account. This just means you are giving IFTTT access to post on your behalf. Don’t worry about this step. IFTTT is quite popular and well respected. They won’t do anything malicious.</li>
<li>Now click on <code>Post a tweet</code></li>
<li>Now you need to tell it what you want your tweets to look like. I’m using: `New blog post: ’ for mine, but you can put whatever you want in yours.</li>
<li>Last step asks you to enter the description you want to use for your new task and then click <code>Create Recipe</code> to save your new masterpiece.</li>
</ol>


<p>Provided you set things up correctly and remembered to verify your email address, your new recipe should now be running every 15 minutes checking for new posts and tweeting about them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Tapir]]></title>
    <link href="http://traffan.com/octopress-tapir/"/>
    <updated>2013-04-21T06:17:11-04:00</updated>
    <id>http://traffan.com/octopress-tapir</id>
    <content type="html"><![CDATA[<p><strong>Note:</strong> You can find the relevant files on GitHub here: <a href="https://github.com/blimey85/octopress-tapir">octopress-tapir</a></p>

<p><a href="http://tapirgo.com/">Tapir</a> search for your <a href="http://octopress.org/">Octopress</a> blog!</p>

<p>Tapir works by indexing your RSS feed. Only what is included within this file will be indexed. For RSS purposes you most likely only want the last 20 or so articles but for search, you want all of them included. To handle this, we simply create a second xml file to use for search.</p>

<pre><code>atom.xml
</code></pre>

<ul>
<li>the original file</li>
<li>limited to 20 most recent posts</li>
<li>we use this for RSS</li>
</ul>


<pre><code>atom_search.xml
</code></pre>

<ul>
<li>the new file</li>
<li>a modified version of atom.xml</li>
<li>includes all posts</li>
<li>added summary field</li>
</ul>


<p><strong>Install</strong></p>

<ol>
<li>Visit <a href="http://tapirgo.com/">Tapirgo.com</a> and enter the url to your <code>atom_search.xml</code> like: <code>http://yoursite.com/atom_search.xml</code>
After you enter your email and click the big <code>GO</code> button, you’ll be given both a public and a private token.</li>
<li>Open your <code>_config.yml</code> and include the public token: <code>tapir_token: your_id_here</code></li>
<li>Copy <code>loading.gif</code> to your <code>source/images/</code> folder.</li>
<li>Copy <code>jquery-tapir.js</code> to your <code>source/javascripts/</code> folder.</li>
<li>Copy <code>search.html</code> to your <code>source/</code> folder.</li>
<li>Open <code>source/_includes/navigation.html</code> and add:</li>
</ol>


<pre><code class="html">{% if site.tapir_token %}

  &lt;form method="get" action="/search.html"&gt;
    &lt;fieldset role="search"&gt;
      &lt;input class="search" name="query" type="text" placeholder="Search..." x-webkit-speech /&gt;
    &lt;/fieldset&gt;
  &lt;/form&gt;

{% endif %}
</code></pre>

<p>That’s all there is to it. You should now be able to search your content using the wonderful <a href="http://tapirgo.com/">Tapir</a> service. :)</p>
]]></content>
  </entry>
  
</feed>
